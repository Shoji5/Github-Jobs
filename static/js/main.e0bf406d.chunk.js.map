{"version":3,"sources":["components/Header.js","components/Footer.js","store/isFullSlice.js","store/locationSlice.js","store/jobsSlice.js","api/index.js","components/FormSearchCity.js","images/backgroundImg.png","store/descriptionSlice.js","components/FormSearchCompanies.js","store/isHomeSlice.js","store/jobIdSlice.js","components/Job.js","store/pageSlice.js","components/Pages.js","components/ListJobs.js","components/Home.js","components/JobDetail.js","App.js","store/index.js","index.js"],"names":["Header","Container","className","Footer","href","isFullSlice","createSlice","require","name","initialState","reducers","setIsFull","state","action","payload","actions","reducer","locationSlice","setLocation","getJobs","createAsyncThunk","i","a","dispatch","getState","description","location","full_time","isFull","page","fetch","then","res","json","jobs","extraReducers","fulfilled","mapDispatchToProps","connect","checkBoxIsFull","useRef","form","textCity","checkBoxLodon","checkBoxAmsterdam","checkBoxNewYork","checkBoxBerlin","arr","changeHandler","e","forEach","x","current","id","target","checked","citySearch","value","Form","Check","label","onChange","ref","onSubmit","preventDefault","Control","placeholder","descriptionSlice","setDescription","Row","Image","src","bg","style","zIndex","top","left","objectFit","width","Col","md","type","size","Button","right","isHomeSlice","setIsHome","jobIdSlice","setJobId","job","flexWrap","alignItems","onClick","company_logo","marginRight","height","flex","company","title","display","alignSelf","Public","Schedule","day","day1","Date","day2","Math","ceil","getTime","count","created_at","pageSlice","setPage","total","variant","NavigateBefore","NavigateNext","map","length","Home","useState","setJob","useEffect","getJob","KeyboardBackspace","dangerouslySetInnerHTML","__html","how_to_apply","alt","isHome","idHome","jobId","configureStore","jobsReducer","isFullReducer","locationReducer","descriptionReducer","pageReducer","isHomeReducer","jobIdReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.e0bf406d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Container>\r\n            <header>\r\n                <h1 className=\"text-2xl font-bold py-3\">\r\n                    Github<span className=\"font-normal ml-1\">Jobs</span>\r\n                </h1>\r\n            </header>\r\n        </Container>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"mt-8 mb-3\">\r\n            <p className=\"text-center text-black\">\r\n                <a href=\"https://github.com/Shoji5\">Tuấn Vũ</a>\r\n                <span> @ </span>\r\n                <a href=\"https://devchallenges.io/\">DevChallenges.io</a>\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst isFullSlice = createSlice({\r\n    name: \"isFull\",\r\n    initialState: false,\r\n    reducers: {\r\n        setIsFull: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = isFullSlice;\r\nexport const { setIsFull } = actions;\r\nexport default reducer;\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst locationSlice = createSlice({\r\n    name: \"location\",\r\n    initialState: \"\",\r\n    reducers: {\r\n        setLocation: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = locationSlice;\r\nexport const { setLocation } = actions;\r\nexport default reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getJobs as search } from \"../api\";\r\n\r\nexport const getJobs = createAsyncThunk(\r\n    \"getJobs\",\r\n    async (i, { dispatch, getState }) => {\r\n        let state = getState();\r\n        let jobs = await search(\r\n            state.description,\r\n            state.location,\r\n            state.isFull,\r\n            state.page\r\n        );\r\n        return jobs;\r\n    }\r\n);\r\n\r\nconst jobsSlice = createSlice({\r\n    name: \"jobs\",\r\n    initialState: [],\r\n    extraReducers: {\r\n        [getJobs.fulfilled]: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { reducer } = jobsSlice;\r\nexport default reducer;\r\n","const url =\r\n    \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\r\n\r\nexport const getJobs = (description, location, full_time, page) => {\r\n    return fetch(\r\n        `${url}?description=${description || \"\"}&location=${\r\n            location || \"\"\r\n        }&full_time=${full_time ? \"on\" : \"\"}&page=${page}`\r\n    ).then((res) => res.json());\r\n};\r\n\r\nexport const getJob = (id) => {\r\n    return fetch(\r\n        `https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions/${id}.json`\r\n    ).then((res) => res.json());\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { setIsFull } from \"../store/isFullSlice\";\r\nimport { setLocation } from \"../store/locationSlice\";\r\nimport { getJobs } from \"../store/jobsSlice\";\r\n\r\nexport const FormSearchCity = ({ setIsFull, setLocation, getJobs }) => {\r\n    const checkBoxIsFull = useRef();\r\n    const form = useRef();\r\n    const textCity = useRef();\r\n    const checkBoxLodon = useRef();\r\n    const checkBoxAmsterdam = useRef();\r\n    const checkBoxNewYork = useRef();\r\n    const checkBoxBerlin = useRef();\r\n    const arr = [\r\n        checkBoxLodon,\r\n        checkBoxAmsterdam,\r\n        checkBoxNewYork,\r\n        checkBoxBerlin,\r\n    ];\r\n\r\n    const changeIsFullHandler = (e) => {\r\n        setIsFull(e.target.checked);\r\n        getJobs();\r\n    };\r\n\r\n    const changeHandler = (e) => {\r\n        arr.forEach((x) => {\r\n            if (x.current.id !== e.target.id) x.current.checked = false;\r\n        });\r\n        form.current.citySearch.value = e.target.id;\r\n        setLocation(e.target.id);\r\n        getJobs();\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setLocation(e.target.citySearch.value);\r\n        getJobs();\r\n    };\r\n\r\n    const searchChangeHandler = (e) => {\r\n        arr.forEach((x) => (x.current.checked = false));\r\n\r\n        setLocation(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form.Check\r\n                className=\"cursor-pointer mb-2\"\r\n                label=\"Full time\"\r\n                id=\"isFullTime\"\r\n                onChange={changeIsFullHandler}\r\n                ref={checkBoxIsFull}\r\n            />\r\n            <h3 className=\"mb-2 text-xl\">LOCATION</h3>\r\n            <Form className=\"mb-2\" onSubmit={submitHandler} ref={form}>\r\n                <Form.Control\r\n                    placeholder=\"City, state, zip code or country\"\r\n                    id=\"citySearch\"\r\n                    name=\"citySearch\"\r\n                    ref={textCity}\r\n                    onChange={searchChangeHandler}\r\n                />\r\n            </Form>\r\n            <Form.Check\r\n                className=\"mb-2\"\r\n                label=\"Lodon\"\r\n                id=\"Lodon\"\r\n                ref={checkBoxLodon}\r\n                onChange={changeHandler}\r\n            />\r\n            <Form.Check\r\n                className=\"mb-2\"\r\n                label=\"Amsterdam\"\r\n                id=\"Amsterdam\"\r\n                ref={checkBoxAmsterdam}\r\n                onChange={changeHandler}\r\n            />\r\n            <Form.Check\r\n                className=\"mb-2\"\r\n                label=\"New York\"\r\n                id=\"NewYork\"\r\n                ref={checkBoxNewYork}\r\n                onChange={changeHandler}\r\n            />\r\n            <Form.Check\r\n                className=\"mb-2\"\r\n                label=\"Berlin\"\r\n                id=\"Berlin\"\r\n                ref={checkBoxBerlin}\r\n                onChange={changeHandler}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = { setIsFull, setLocation, getJobs };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSearchCity);\r\n","export default __webpack_public_path__ + \"static/media/backgroundImg.c8427568.png\";","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst descriptionSlice = createSlice({\r\n    name: \"description\",\r\n    initialState: \"\",\r\n    reducers: {\r\n        setDescription: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = descriptionSlice;\r\nexport const { setDescription } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport bg from \"../images/backgroundImg.png\";\r\nimport { Button, Col, Container, Form, Image, Row } from \"react-bootstrap\";\r\nimport { setDescription } from \"../store/descriptionSlice\";\r\nimport { getJobs } from \"../store/jobsSlice\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport function FormSearchCompanies({ setDescription, getJobs }) {\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        getJobs();\r\n    };\r\n\r\n    const searchChangeHandler = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n    return (\r\n        <Container>\r\n            <Row className=\"py-5 justify-content-center position-relative\">\r\n                <Image\r\n                    src={bg}\r\n                    className=\"position-absolute h-100 rounded-lg\"\r\n                    style={{\r\n                        zIndex: 0,\r\n                        top: 0,\r\n                        left: 15,\r\n                        objectFit: \"cover\",\r\n                        width: \"calc(100% - 30px)\",\r\n                    }}\r\n                />\r\n                <Col md={8} className=\"position-relative\" style={{ zIndex: 1 }}>\r\n                    <Form id=\"form-search-companies\" onSubmit={submitHandler}>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            size=\"lg\"\r\n                            placeholder=\"Title, companies, expertise or benefits\"\r\n                            onChange={searchChangeHandler}\r\n                        />\r\n                        <Button\r\n                            className=\"px-4 position-absolute\"\r\n                            style={{ top: 5, right: 20 }}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = { setDescription, getJobs };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FormSearchCompanies);\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst isHomeSlice = createSlice({\r\n    name: \"isHome\",\r\n    initialState: true,\r\n    reducers: {\r\n        setIsHome: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = isHomeSlice;\r\nexport const { setIsHome } = actions;\r\nexport default reducer;\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst jobIdSlice = createSlice({\r\n    name: \"jobId\",\r\n    initialState: \"\",\r\n    reducers: {\r\n        setJobId: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = jobIdSlice;\r\nexport const { setJobId } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport { Public, Schedule } from \"@material-ui/icons\";\r\nimport { Button, Col, Image, Row } from \"react-bootstrap\";\r\nimport { setIsHome } from \"../store/isHomeSlice\";\r\nimport { setJobId } from \"../store/jobIdSlice\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const Job = ({ job, setIsHome, setJobId }) => {\r\n    const clickHandler = () => {\r\n        setJobId(job.id);\r\n        setIsHome(false);\r\n    };\r\n    const count = (day) => {\r\n        let day1 = new Date();\r\n        let day2 = new Date(day);\r\n        return `${Math.ceil(\r\n            (day1.getTime() - day2.getTime()) / (1000 * 60 * 60 * 24)\r\n        )} days ago`;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"mb-4 p-2 rounded-lg shadow d-flex bg-white cursor-pointer\"\r\n            style={{\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"flex-start\",\r\n            }}\r\n            onClick={clickHandler}\r\n        >\r\n            <Image\r\n                className=\"rounded-lg\"\r\n                src={job.company_logo || \"http://placehold.it/90x90?text=404\"}\r\n                style={{\r\n                    marginRight: 15,\r\n                    width: 90,\r\n                    height: 90,\r\n                    objectFit: \"contain\",\r\n                }}\r\n            />\r\n            <div className=\"d-md-flex\" style={{ flex: 1 }}>\r\n                <div style={{ flex: 1 }}>\r\n                    <small>{job.company}</small>\r\n                    <p>{job.title}</p>\r\n                    <span className=\"border border-secondary rounded-lg w-auto px-1\">\r\n                        {job.type}\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className=\"justify-content-between\"\r\n                    style={{\r\n                        display: \"flex\",\r\n                        alignSelf: \"flex-end\",\r\n                    }}\r\n                >\r\n                    <div className=\"job-position\">\r\n                        <Public />\r\n                        <span>{job.location}</span>\r\n                    </div>\r\n                    <div className=\"job-time\">\r\n                        <Schedule />\r\n                        <span>{count(job.created_at)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = { setIsHome, setJobId };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Job);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst pageSlice = createSlice({\r\n    name: \"page\",\r\n    initialState: 1,\r\n    reducers: {\r\n        setPage: (state, action) => action.payload,\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = pageSlice;\r\nexport const { setPage } = actions;\r\nexport default reducer;\r\n","import { NavigateBefore, NavigateNext } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPage } from \"../store/pageSlice\";\r\nimport { getJobs } from \"../store/jobsSlice\";\r\n\r\nexport const Pages = ({ page, setPage, getJobs, total }) => {\r\n    const beforeHandler = () => {\r\n        if (page === 1) return;\r\n        setPage(page - 1);\r\n        getJobs();\r\n    };\r\n    const nextHandler = () => {\r\n        if (total < 50) return;\r\n        setPage(page + 1);\r\n        getJobs();\r\n    };\r\n\r\n    return (\r\n        <div className=\"pages\">\r\n            <Button variant=\"outline-primary\" size=\"sm\" onClick={beforeHandler}>\r\n                <NavigateBefore />\r\n            </Button>\r\n            <Button variant=\"outline-primary\" size=\"sm\" onClick={nextHandler}>\r\n                <NavigateNext />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ page: state.page });\r\n\r\nconst mapDispatchToProps = { setPage, getJobs };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pages);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Job from \"./Job\";\r\nimport Pages from \"./Pages\";\r\n\r\nexport const ListJobs = ({ jobs }) => {\r\n    return (\r\n        <>\r\n            {jobs.map((job, i) => (\r\n                <Job key={i} job={job} />\r\n            ))}\r\n            <Pages total={jobs.length} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ jobs: state.jobs });\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListJobs);\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport FormSearchCity from \"./FormSearchCity\";\r\nimport FormSearchCompanies from \"./FormSearchCompanies\";\r\nimport ListJobs from \"./ListJobs\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <FormSearchCompanies />\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <FormSearchCity />\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <ListJobs />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n","import { Link } from \"@material-ui/core\";\r\nimport { KeyboardBackspace, Public, Schedule } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getJob } from \"../api\";\r\nimport { setIsHome } from \"../store/isHomeSlice\";\r\n\r\nexport function JobDetail({ id, setIsHome }) {\r\n    const [job, setJob] = useState({});\r\n\r\n    useEffect(() => {\r\n        getJob(id).then(setJob);\r\n    }, []);\r\n\r\n    const count = (day) => {\r\n        let day1 = new Date();\r\n        let day2 = new Date(day);\r\n        return `${Math.ceil(\r\n            (day1.getTime() - day2.getTime()) / (1000 * 60 * 60 * 24)\r\n        )} days ago`;\r\n    };\r\n    return (\r\n        <>\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <button\r\n                            className=\"text-blue-500\"\r\n                            onClick={() => {\r\n                                setIsHome(true);\r\n                            }}\r\n                        >\r\n                            <KeyboardBackspace />\r\n                            Back to search\r\n                        </button>\r\n                        <h6 className=\"font-bold text-gray-600 mt-2\">\r\n                            HOW TO APPLY\r\n                        </h6>\r\n                        <p\r\n                            className=\"break-words mt-2 \"\r\n                            dangerouslySetInnerHTML={{\r\n                                __html: job.how_to_apply,\r\n                            }}\r\n                        ></p>\r\n                    </Col>\r\n                    <Col md={9}>\r\n                        <h2 className=\"text-xl font-bold text-blue-1\">\r\n                            {job.title}\r\n                            <span className=\"text-base font-medium border border-secondary rounded-lg w-auto ml-2 px-1\">\r\n                                {job.type}\r\n                            </span>\r\n                        </h2>\r\n                        <div className=\"job-time text-gray-600 mt-2\">\r\n                            <Schedule />\r\n                            <span>{count(job.created_at)}</span>\r\n                        </div>\r\n                        <div className=\"d-flex my-4\">\r\n                            <img\r\n                                className=\"rounded-lg object-contain mr-2\"\r\n                                src={job.company_logo}\r\n                                alt=\"\"\r\n                                style={{ width: 70, height: 70 }}\r\n                            />\r\n                            <div className=\"d-flex flex-col justify-between\">\r\n                                <h3 className=\"text-lg font-bold text-blue-1\">\r\n                                    {job.company}\r\n                                </h3>\r\n                                <div className=\"job-position text-gray-600\">\r\n                                    <Public />\r\n                                    <span>{job.location}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p\r\n                            dangerouslySetInnerHTML={{\r\n                                __html: job.description,\r\n                            }}\r\n                        ></p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default connect(null, { setIsHome })(JobDetail);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport JobDetail from \"./components/JobDetail\";\r\nimport { getJobs } from \"./store/jobsSlice\";\r\n\r\nexport const App = ({ getJobs, isHome, jobId }) => {\r\n    useEffect(() => {\r\n        getJobs();\r\n    });\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header />\r\n            {isHome ? <Home /> : <JobDetail id={jobId} />}\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isHome: state.idHome,\r\n    jobId: state.jobId,\r\n});\r\n\r\nconst mapDispatchToProps = { getJobs };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport jobsReducer from \"./jobsSlice\";\r\nimport isFullReducer from \"./isFullSlice\";\r\nimport locationReducer from \"./locationSlice\";\r\nimport descriptionReducer from \"./descriptionSlice\";\r\nimport pageReducer from \"./pageSlice\";\r\nimport isHomeReducer from \"./isHomeSlice\";\r\nimport jobIdReducer from \"./jobIdSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        jobs: jobsReducer,\r\n        isFull: isFullReducer,\r\n        location: locationReducer,\r\n        description: descriptionReducer,\r\n        page: pageReducer,\r\n        idHome: isHomeReducer,\r\n        jobId: jobIdReducer,\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./tailwind.output.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}